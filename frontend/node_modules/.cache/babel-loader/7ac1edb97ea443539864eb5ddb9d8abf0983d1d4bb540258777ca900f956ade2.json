{"ast":null,"code":"const API_URL = 'http://localhost:8080/api';\nconst handleResponse = async response => {\n  console.log('Response status:', response.status);\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error('Error response:', errorText);\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return response.json();\n};\nexport const getAllCategories = async () => {\n  try {\n    console.log('Fetching all categories from:', `${API_URL}/categories`);\n    const response = await fetch(`${API_URL}/categories`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error in getAllCategories:', error);\n    throw error;\n  }\n};\nexport const categoryService = {\n  addCategory: async category => {\n    try {\n      console.log('Adding category:', category);\n      const response = await fetch(`${API_URL}/categories`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n      });\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error adding category:', error);\n      throw error;\n    }\n  },\n  updateCategory: async (id, category) => {\n    try {\n      console.log('Updating category:', id, category);\n      const response = await fetch(`${API_URL}/categories/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n      });\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error updating category:', error);\n      throw error;\n    }\n  },\n  deleteCategory: async id => {\n    try {\n      console.log('Deleting category:', id);\n      const response = await fetch(`${API_URL}/categories/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting category:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_URL","handleResponse","response","console","log","status","ok","errorText","text","error","Error","json","getAllCategories","fetch","method","headers","credentials","categoryService","addCategory","category","body","JSON","stringify","updateCategory","id","deleteCategory"],"sources":["C:/Users/ramiy/Documents/ShortCut/CataVoitureBackend/frontend/src/services/categoryService.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/api';\r\n\r\nconst handleResponse = async (response) => {\r\n    console.log('Response status:', response.status);\r\n    if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Error response:', errorText);\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const getAllCategories = async () => {\r\n    try {\r\n        console.log('Fetching all categories from:', `${API_URL}/categories`);\r\n        const response = await fetch(`${API_URL}/categories`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include'\r\n        });\r\n        return handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Error in getAllCategories:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const categoryService = {\r\n    addCategory: async (category) => {\r\n        try {\r\n            console.log('Adding category:', category);\r\n            const response = await fetch(`${API_URL}/categories`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(category),\r\n            });\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error adding category:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    updateCategory: async (id, category) => {\r\n        try {\r\n            console.log('Updating category:', id, category);\r\n            const response = await fetch(`${API_URL}/categories/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(category),\r\n            });\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error updating category:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    deleteCategory: async (id) => {\r\n        try {\r\n            console.log('Deleting category:', id);\r\n            const response = await fetch(`${API_URL}/categories/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting category:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
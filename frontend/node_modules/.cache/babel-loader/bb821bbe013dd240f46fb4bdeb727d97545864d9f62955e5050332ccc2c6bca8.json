{"ast":null,"code":"const API_URL = 'http://backend:8080/api'; // New URL for Docker container communication\n\nexport const carService = {\n  getAllCars: async () => {\n    const response = await fetch(`${API_URL}/voitures`);\n    return response.json();\n  },\n  getCarsByCategory: async categoryId => {\n    const response = await fetch(`${API_URL}/voitures/categorie/${categoryId}`);\n    return response.json();\n  },\n  getCarById: async id => {\n    const response = await fetch(`${API_URL}/voitures/${id}`);\n    return response.json();\n  },\n  addCar: async car => {\n    const response = await fetch(`${API_URL}/voitures`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    });\n    return response.json();\n  },\n  updateCar: async (id, car) => {\n    const response = await fetch(`${API_URL}/voitures/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    });\n    return response.json();\n  },\n  deleteCar: async id => {\n    await fetch(`${API_URL}/voitures/${id}`, {\n      method: 'DELETE'\n    });\n  },\n  uploadImage: async file => {\n    try {\n      console.log('Starting image upload:', file.name);\n      console.log('File type:', file.type);\n      console.log('File size:', file.size);\n      const formData = new FormData();\n      formData.append('file', file);\n      const uploadUrl = `${API_URL}/api/images/upload`;\n      console.log('Sending request to:', uploadUrl);\n      const response = await fetch(uploadUrl, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Upload failed with status:', response.status);\n        console.error('Error response:', errorText);\n        throw new Error(`Failed to upload image: ${errorText}`);\n      }\n      const fileName = await response.text();\n      if (!fileName || fileName.trim() === '') {\n        throw new Error('Received empty filename from server');\n      }\n      console.log('Upload successful, received filename:', fileName);\n      return fileName.trim();\n    } catch (error) {\n      console.error('Error in uploadImage:', error);\n      if (error.message === 'Failed to fetch') {\n        console.error('Network error: Could not connect to the server. Is the backend running?');\n      }\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_URL","carService","getAllCars","response","fetch","json","getCarsByCategory","categoryId","getCarById","id","addCar","car","method","headers","body","JSON","stringify","updateCar","deleteCar","uploadImage","file","console","log","name","type","size","formData","FormData","append","uploadUrl","ok","errorText","text","error","status","Error","fileName","trim","message"],"sources":["C:/Users/ramiy/Documents/ShortCut/examRami/frontend/src/services/carService.js"],"sourcesContent":["const API_URL = 'http://backend:8080/api'; // New URL for Docker container communication\n\n\nexport const carService = {\n    getAllCars: async () => {\n        const response = await fetch(`${API_URL}/voitures`);\n        return response.json();\n    },\n\n    getCarsByCategory: async (categoryId) => {\n        const response = await fetch(`${API_URL}/voitures/categorie/${categoryId}`);\n        return response.json();\n    },\n\n    getCarById: async (id) => {\n        const response = await fetch(`${API_URL}/voitures/${id}`);\n        return response.json();\n    },\n\n    addCar: async (car) => {\n        const response = await fetch(`${API_URL}/voitures`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(car),\n        });\n        return response.json();\n    },\n\n    updateCar: async (id, car) => {\n        const response = await fetch(`${API_URL}/voitures/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(car),\n        });\n        return response.json();\n    },\n\n    deleteCar: async (id) => {\n        await fetch(`${API_URL}/voitures/${id}`, {\n            method: 'DELETE',\n        });\n    },\n\n    uploadImage: async (file) => {\n        try {\n            console.log('Starting image upload:', file.name);\n            console.log('File type:', file.type);\n            console.log('File size:', file.size);\n            \n            const formData = new FormData();\n            formData.append('file', file);\n            \n            const uploadUrl = `${API_URL}/api/images/upload`;\n            console.log('Sending request to:', uploadUrl);\n            \n            const response = await fetch(uploadUrl, {\n                method: 'POST',\n                body: formData\n            });\n            \n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error('Upload failed with status:', response.status);\n                console.error('Error response:', errorText);\n                throw new Error(`Failed to upload image: ${errorText}`);\n            }\n            \n            const fileName = await response.text();\n            if (!fileName || fileName.trim() === '') {\n                throw new Error('Received empty filename from server');\n            }\n            \n            console.log('Upload successful, received filename:', fileName);\n            return fileName.trim();\n        } catch (error) {\n            console.error('Error in uploadImage:', error);\n            if (error.message === 'Failed to fetch') {\n                console.error('Network error: Could not connect to the server. Is the backend running?');\n            }\n            throw error;\n        }\n    }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
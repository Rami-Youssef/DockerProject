{"ast":null,"code":"const API_URL = 'http://localhost:8080/api';\nconst handleResponse = async response => {\n  console.log('Response status:', response.status);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  const data = await response.json();\n  console.log('Response data:', data);\n  return data;\n};\nexport const carService = {\n  getAllCars: async () => {\n    try {\n      console.log('Fetching all cars from:', `${API_URL}/voitures`);\n      const response = await fetch(`${API_URL}/voitures`);\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error fetching cars:', error);\n      throw error;\n    }\n  },\n  getCarsByCategory: async categoryId => {\n    try {\n      console.log('Fetching cars for category:', categoryId);\n      const response = await fetch(`${API_URL}/voitures/categorie/${categoryId}`);\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error fetching cars by category:', error);\n      throw error;\n    }\n  },\n  addCar: async car => {\n    try {\n      console.log('Adding car:', car);\n      const response = await fetch(`${API_URL}/voitures`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(car)\n      });\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error adding car:', error);\n      throw error;\n    }\n  },\n  updateCar: async (id, car) => {\n    try {\n      console.log('Updating car:', id, car);\n      const response = await fetch(`${API_URL}/voitures/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(car)\n      });\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error updating car:', error);\n      throw error;\n    }\n  },\n  deleteCar: async id => {\n    try {\n      console.log('Deleting car:', id);\n      const response = await fetch(`${API_URL}/voitures/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting car:', error);\n      throw error;\n    }\n  },\n  uploadImage: async file => {\n    try {\n      console.log('Uploading image:', file.name);\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch(`${API_URL}/images/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_URL","handleResponse","response","console","log","status","ok","Error","data","json","carService","getAllCars","fetch","error","getCarsByCategory","categoryId","addCar","car","method","headers","body","JSON","stringify","updateCar","id","deleteCar","uploadImage","file","name","formData","FormData","append"],"sources":["C:/Users/ramiy/Documents/ShortCut/CataVoitureBackend/frontend/src/services/carService.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/api';\r\n\r\nconst handleResponse = async (response) => {\r\n    console.log('Response status:', response.status);\r\n    if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    console.log('Response data:', data);\r\n    return data;\r\n};\r\n\r\nexport const carService = {\r\n    getAllCars: async () => {\r\n        try {\r\n            console.log('Fetching all cars from:', `${API_URL}/voitures`);\r\n            const response = await fetch(`${API_URL}/voitures`);\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error fetching cars:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    getCarsByCategory: async (categoryId) => {\r\n        try {\r\n            console.log('Fetching cars for category:', categoryId);\r\n            const response = await fetch(`${API_URL}/voitures/categorie/${categoryId}`);\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error fetching cars by category:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    addCar: async (car) => {\r\n        try {\r\n            console.log('Adding car:', car);\r\n            const response = await fetch(`${API_URL}/voitures`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(car),\r\n            });\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error adding car:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    updateCar: async (id, car) => {\r\n        try {\r\n            console.log('Updating car:', id, car);\r\n            const response = await fetch(`${API_URL}/voitures/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(car),\r\n            });\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error updating car:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    deleteCar: async (id) => {\r\n        try {\r\n            console.log('Deleting car:', id);\r\n            const response = await fetch(`${API_URL}/voitures/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting car:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    uploadImage: async (file) => {\r\n        try {\r\n            console.log('Uploading image:', file.name);\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            \r\n            const response = await fetch(`${API_URL}/images/upload`, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const API_URL = 'http://localhost:8080';\nconst handleResponse = async response => {\n  console.log('Response status:', response.status);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  const data = await response.json();\n  console.log('Response data:', data);\n  return data;\n};\nexport const categoryService = {\n  getAllCategories: async () => {\n    try {\n      console.log('Fetching all categories from:', `${API_URL}/api/categories`);\n      const response = await fetch(`${API_URL}/api/categories`);\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      throw error;\n    }\n  },\n  addCategory: async category => {\n    try {\n      console.log('Adding category:', category);\n      const response = await fetch(`${API_URL}/api/categories`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n      });\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error adding category:', error);\n      throw error;\n    }\n  },\n  updateCategory: async (id, category) => {\n    try {\n      console.log('Updating category:', id, category);\n      const response = await fetch(`${API_URL}/api/categories/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n      });\n      return await handleResponse(response);\n    } catch (error) {\n      console.error('Error updating category:', error);\n      throw error;\n    }\n  },\n  deleteCategory: async id => {\n    try {\n      console.log('Deleting category:', id);\n      const response = await fetch(`${API_URL}/api/categories/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting category:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_URL","handleResponse","response","console","log","status","ok","Error","data","json","categoryService","getAllCategories","fetch","error","addCategory","category","method","headers","body","JSON","stringify","updateCategory","id","deleteCategory"],"sources":["C:/Users/ramiy/Documents/ShortCut/CataVoitureBackend/frontend/src/services/categoryService.js"],"sourcesContent":["const API_URL = 'http://localhost:8080';\r\n\r\nconst handleResponse = async (response) => {\r\n    console.log('Response status:', response.status);\r\n    if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    console.log('Response data:', data);\r\n    return data;\r\n};\r\n\r\nexport const categoryService = {\r\n    getAllCategories: async () => {\r\n        try {\r\n            console.log('Fetching all categories from:', `${API_URL}/api/categories`);\r\n            const response = await fetch(`${API_URL}/api/categories`);\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    addCategory: async (category) => {\r\n        try {\r\n            console.log('Adding category:', category);\r\n            const response = await fetch(`${API_URL}/api/categories`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(category),\r\n            });\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error adding category:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    updateCategory: async (id, category) => {\r\n        try {\r\n            console.log('Updating category:', id, category);\r\n            const response = await fetch(`${API_URL}/api/categories/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(category),\r\n            });\r\n            return await handleResponse(response);\r\n        } catch (error) {\r\n            console.error('Error updating category:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    deleteCategory: async (id) => {\r\n        try {\r\n            console.log('Deleting category:', id);\r\n            const response = await fetch(`${API_URL}/api/categories/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting category:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const API_URL = 'http://localhost:8080/api';\nexport const carService = {\n  getAllCars: async () => {\n    const response = await fetch(`${API_URL}/voitures`);\n    return response.json();\n  },\n  getCarsByCategory: async categoryId => {\n    const response = await fetch(`${API_URL}/voitures/category/${categoryId}`);\n    return response.json();\n  },\n  addCar: async car => {\n    const response = await fetch(`${API_URL}/voitures`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    });\n    return response.json();\n  },\n  updateCar: async (id, car) => {\n    const response = await fetch(`${API_URL}/voitures/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    });\n    return response.json();\n  },\n  deleteCar: async id => {\n    await fetch(`${API_URL}/voitures/${id}`, {\n      method: 'DELETE'\n    });\n  },\n  uploadImage: async file => {\n    try {\n      console.log('Uploading image:', file.name);\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch(`${API_URL}/images/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload image');\n      }\n      const fileName = await response.text();\n      return fileName;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_URL","carService","getAllCars","response","fetch","json","getCarsByCategory","categoryId","addCar","car","method","headers","body","JSON","stringify","updateCar","id","deleteCar","uploadImage","file","console","log","name","formData","FormData","append","ok","Error","fileName","text","error"],"sources":["C:/Users/ramiy/Documents/ShortCut/CataVoitureBackend/frontend/src/services/carService.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/api';\r\n\r\nexport const carService = {\r\n    getAllCars: async () => {\r\n        const response = await fetch(`${API_URL}/voitures`);\r\n        return response.json();\r\n    },\r\n\r\n    getCarsByCategory: async (categoryId) => {\r\n        const response = await fetch(`${API_URL}/voitures/category/${categoryId}`);\r\n        return response.json();\r\n    },\r\n\r\n    addCar: async (car) => {\r\n        const response = await fetch(`${API_URL}/voitures`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(car),\r\n        });\r\n        return response.json();\r\n    },\r\n\r\n    updateCar: async (id, car) => {\r\n        const response = await fetch(`${API_URL}/voitures/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(car),\r\n        });\r\n        return response.json();\r\n    },\r\n\r\n    deleteCar: async (id) => {\r\n        await fetch(`${API_URL}/voitures/${id}`, {\r\n            method: 'DELETE',\r\n        });\r\n    },\r\n\r\n    uploadImage: async (file) => {\r\n        try {\r\n            console.log('Uploading image:', file.name);\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            \r\n            const response = await fetch(`${API_URL}/images/upload`, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Failed to upload image');\r\n            }\r\n            \r\n            const fileName = await response.text();\r\n            return fileName;\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}; "],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,UAAU,GAAG;EACtBC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,WAAW,CAAC;IACnD,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC;EAEDC,iBAAiB,EAAE,MAAOC,UAAU,IAAK;IACrC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,sBAAsBO,UAAU,EAAE,CAAC;IAC1E,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC;EAEDG,MAAM,EAAE,MAAOC,GAAG,IAAK;IACnB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,WAAW,EAAE;MAChDU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,GAAG;IAC5B,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC;EAEDU,SAAS,EAAE,MAAAA,CAAOC,EAAE,EAAEP,GAAG,KAAK;IAC1B,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,aAAagB,EAAE,EAAE,EAAE;MACtDN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,GAAG;IAC5B,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC;EAEDY,SAAS,EAAE,MAAOD,EAAE,IAAK;IACrB,MAAMZ,KAAK,CAAC,GAAGJ,OAAO,aAAagB,EAAE,EAAE,EAAE;MACrCN,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC;EAEDQ,WAAW,EAAE,MAAOC,IAAI,IAAK;IACzB,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAACG,IAAI,CAAC;MAC1C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;MAE7B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,gBAAgB,EAAE;QACrDU,MAAM,EAAE,MAAM;QACdE,IAAI,EAAEW;MACV,CAAC,CAAC;MAEF,IAAI,CAACpB,QAAQ,CAACuB,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MAEA,MAAMC,QAAQ,GAAG,MAAMzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC;MACtC,OAAOD,QAAQ;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}